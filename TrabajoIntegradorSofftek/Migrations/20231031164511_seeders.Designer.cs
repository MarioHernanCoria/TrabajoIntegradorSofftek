// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrabajoIntegradorSofftek.DataAccess;

#nullable disable

namespace TrabajoIntegradorSofftek.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231031164511_seeders")]
    partial class seeders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrabajoIntegradorSofftek.Entities.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("Activo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Direccion");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Proyectos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Direccion = "Av Rivadavia 3500",
                            Estado = 1,
                            Nombre = "EcoGas"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Direccion = "Av. Cordoba 2834",
                            Estado = 2,
                            Nombre = "GasTech Innovate"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Direccion = "Av. Pedro Goyena 643",
                            Estado = 3,
                            Nombre = "GasCom Connect"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Direccion = "Calle del Sol 123",
                            Estado = 2,
                            Nombre = "EcoGarden"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Direccion = "Avenida Tecnológica 789",
                            Estado = 1,
                            Nombre = "GasSolutions"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Direccion = "Calle de la Salud 456",
                            Estado = 4,
                            Nombre = "HealthTrack"
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofftek.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("Activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "Consultor"
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofftek.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<double>("ValorHora")
                        .HasColumnType("float")
                        .HasColumnName("ValorHora");

                    b.HasKey("Id");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Conversiones a Gas Natural",
                            Estado = false,
                            ValorHora = 500.0
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Instalacion de Medidores y Conexiones",
                            Estado = true,
                            ValorHora = 350.0
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Mantenimiento de Redes y Tuberias",
                            Estado = true,
                            ValorHora = 230.0
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Servicio de Seguimiento",
                            Estado = true,
                            ValorHora = 300.0
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Consultoría en Seguridad",
                            Estado = true,
                            ValorHora = 200.0
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Servicio de Reparación",
                            Estado = true,
                            ValorHora = 180.0
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofftek.Entities.Trabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodTrabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("Activo");

                    b.Property<int>("CantHoras")
                        .HasColumnType("int")
                        .HasColumnName("CantHoras");

                    b.Property<int>("CodProyecto")
                        .HasColumnType("int")
                        .HasColumnName("CodProyecto");

                    b.Property<int>("CodServicio")
                        .HasColumnType("int")
                        .HasColumnName("CodServicio");

                    b.Property<double>("Costo")
                        .HasColumnType("float")
                        .HasColumnName("Costo");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<double>("ValorHora")
                        .HasColumnType("float")
                        .HasColumnName("ValorHora");

                    b.HasKey("Id");

                    b.HasIndex("CodProyecto");

                    b.HasIndex("CodServicio");

                    b.ToTable("Trabajos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            CantHoras = 403,
                            CodProyecto = 1,
                            CodServicio = 1,
                            Costo = 120900.0,
                            Fecha = new DateTime(2023, 10, 31, 13, 45, 11, 613, DateTimeKind.Local).AddTicks(5321),
                            ValorHora = 300.0
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            CantHoras = 245,
                            CodProyecto = 2,
                            CodServicio = 3,
                            Costo = 61250.0,
                            Fecha = new DateTime(2023, 10, 31, 13, 45, 11, 613, DateTimeKind.Local).AddTicks(5330),
                            ValorHora = 250.0
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            CantHoras = 180,
                            CodProyecto = 3,
                            CodServicio = 4,
                            Costo = 54000.0,
                            Fecha = new DateTime(2023, 10, 31, 13, 45, 11, 613, DateTimeKind.Local).AddTicks(5331),
                            ValorHora = 300.0
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            CantHoras = 123,
                            CodProyecto = 4,
                            CodServicio = 2,
                            Costo = 43050.0,
                            Fecha = new DateTime(2023, 10, 31, 13, 45, 11, 613, DateTimeKind.Local).AddTicks(5332),
                            ValorHora = 350.0
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            CantHoras = 150,
                            CodProyecto = 5,
                            CodServicio = 2,
                            Costo = 52500.0,
                            Fecha = new DateTime(2023, 10, 31, 13, 45, 11, 613, DateTimeKind.Local).AddTicks(5332),
                            ValorHora = 350.0
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            CantHoras = 200,
                            CodProyecto = 6,
                            CodServicio = 2,
                            Costo = 40000.0,
                            Fecha = new DateTime(2023, 10, 31, 13, 45, 11, 613, DateTimeKind.Local).AddTicks(5333),
                            ValorHora = 200.0
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            CantHoras = 220,
                            CodProyecto = 3,
                            CodServicio = 4,
                            Costo = 39600.0,
                            Fecha = new DateTime(2023, 10, 31, 13, 45, 11, 613, DateTimeKind.Local).AddTicks(5334),
                            ValorHora = 180.0
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofftek.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("Activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Apellido");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Clave");

                    b.Property<int>("CodRol")
                        .HasColumnType("int")
                        .HasColumnName("CodRol");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("Dni");

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("Edad");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("CodRol");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Coria",
                            Clave = "2191227b07660b208a127900f141134edcef520b5f2076f2c08884822e6cd610",
                            CodRol = 1,
                            Dni = 43456342,
                            Edad = 23,
                            Email = "mariocoria@gmail.com",
                            Nombre = "Mario"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Apellido = "Gonzales",
                            Clave = "04e9ebfffd0597ff2a5bba0f510a2a8ba75be7863eeca58dca33463fb61eaa0d",
                            CodRol = 2,
                            Dni = 12345678,
                            Edad = 32,
                            Email = "marcogonzales@gmail.com",
                            Nombre = "Marco"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Apellido = "Abriola",
                            Clave = "f2bb40e4308e58987c6991d243c3be39edd1da1ca0047f13fb04603feb750a80",
                            CodRol = 1,
                            Dni = 87654321,
                            Edad = 22,
                            Email = "marcoabriola@gmail.com",
                            Nombre = "Marco"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Apellido = "Correa",
                            Clave = "5a632a97daad8e256792ac64fae021b5b1b1cfc6ca2d042cd7a8b9246342159a",
                            CodRol = 2,
                            Dni = 26385623,
                            Edad = 32,
                            Email = "mariacorrea@gmail.com",
                            Nombre = "Maria"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Apellido = "Corbalan",
                            Clave = "aacb9ff49f127c203a95b4cab90572356dd034b7080702b4b078b9a926d30e5f",
                            CodRol = 1,
                            Dni = 92857463,
                            Edad = 32,
                            Email = "fernandocorbalan@gmail.com",
                            Nombre = "Fernando"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Apellido = "Duran",
                            Clave = "9fd21154cf0f5affb40b1243de465b4127cd4b3379079ee9c7672bb5920ad117",
                            CodRol = 2,
                            Dni = 25463548,
                            Edad = 26,
                            Email = "brianduran@gmail.com",
                            Nombre = "Brian"
                        });
                });

            modelBuilder.Entity("TrabajoIntegradorSofftek.Entities.Trabajo", b =>
                {
                    b.HasOne("TrabajoIntegradorSofftek.Entities.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("CodProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrabajoIntegradorSofftek.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("CodServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("TrabajoIntegradorSofftek.Entities.Usuario", b =>
                {
                    b.HasOne("TrabajoIntegradorSofftek.Entities.Rol", "Roles")
                        .WithMany()
                        .HasForeignKey("CodRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
